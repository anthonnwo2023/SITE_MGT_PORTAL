@page "/acceptance/reports/general"
@layout MainLayoutAcceptance

<PageTitlePat Title="SMP (Acceptance) - Report" />

<div class="col-sm-12 m-0 p-0" style="background: url('images/worklist.jpg'); background-size: cover; background-position: center right;">
    <div class="display-4" style="padding: 4rem 2rem;">
        Site Acceptance Report
    </div>
</div>

<BreadcrumbAccess OnAuthenticationCheck="AuthenticationCheck" Paths="@Paths" />

<style type="text/css">
    .miniTable {
        min-height: 150px;
        margin-bottom: 20px;
    }

    #UserTable, #UserTable_header_table {
        /*table-layout: unset !important;*/
    }

    .e-dlg-overlay {
        opacity: .8 !important;
    }
</style>

@*@if (Requests == null)
    {
    <PageLoading />
    }
    else
    {*@
<span class="error">@ErrorDetails</span>
<div style="width:calc(100vw - 20rem); ">
    <SfGrid ID="ReportTable" TValue="RequestViewModelDTO" AllowPaging="true" AllowSorting="true" AllowTextWrap="true" Query="@QueryData"
            AllowFiltering="true" Toolbar="@ToolbarItems" @ref="Grid_Request" ShowColumnChooser="true" AllowExcelExport="true"
            Width="100%">
        <SfDataManager @ref="dm" Headers="HeaderData" HttpClientInstance="httpClient" Url="odata/Acceptance" Adaptor="Adaptors.ODataV4Adaptor"></SfDataManager>
        <GridEvents ExcelQueryCellInfoEvent="ExcelQueryCellInfoHandler" ExportComplete="ExportCompleteHandler" OnToolbarClick="ToolbarClickHandler" TValue="RequestViewModelDTO" OnActionFailure="@ActionFailure"></GridEvents>
        <GridFilterSettings ShowFilterBarStatus="true" Mode="FilterBarMode.Immediate" ImmediateModeDelay="3000" Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
        <GridPageSettings PageSize="@pagesize" PageSizes="@pagesizes" EnableQueryString="true"></GridPageSettings>
        <GridSearchSettings></GridSearchSettings>
        <GridTextWrapSettings WrapMode="WrapMode.Content"></GridTextWrapSettings>
        <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false" Mode="EditMode.Dialog" ShowDeleteConfirmDialog="true"></GridEditSettings>
        <GridColumns>
            <GridColumn Field="@nameof(RequestViewModelDTO.TechType)" HeaderText="Tech"
                        Width="80" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
            </GridColumn>
            <GridColumn Visible="false" Field="@nameof(RequestViewModelDTO.UniqueId)" HeaderText="Unique Id" TextAlign="TextAlign.Left"
                        Width="170" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
            </GridColumn>
            <GridColumn Visible="false" Field="@nameof(RequestViewModelDTO.BulkBatchNumber)" HeaderText="Batch Number" TextAlign="TextAlign.Left"
                        Width="170" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
            </GridColumn>
            <GridColumn Visible="false" Field="@nameof(RequestViewModelDTO.VendorName)" HeaderText="Vendor" TextAlign="TextAlign.Left"
                        Width="150" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
            </GridColumn>
            <GridColumn Field="@nameof(RequestViewModelDTO.SiteId)" HeaderText="Site Id" TextAlign="TextAlign.Left"
                        Width="120" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
            </GridColumn>
            <GridColumn Visible="false" Field="@nameof(RequestViewModelDTO.SiteName)" HeaderText="Site Name" TextAlign="TextAlign.Left"
                        Width="160" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
            </GridColumn>
            <GridColumn Visible="false" Field="@nameof(RequestViewModelDTO.RNCBSC)" HeaderText="RNC/BSC" TextAlign="TextAlign.Left"
                        Width="140" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
            </GridColumn>
            <GridColumn Field="@nameof(RequestViewModelDTO.Region)" HeaderText="Region"
                        Width="120" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
            </GridColumn>
            <GridColumn Field="@nameof(RequestViewModelDTO.Spectrum)" HeaderText="Spectrum"
                        Width="140" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
            </GridColumn>
            <GridColumn Visible="false" Field="@nameof(RequestViewModelDTO.Bandwidth)" HeaderText="Bandwidth" TextAlign="TextAlign.Left"
                        Width="140" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
            </GridColumn>
            <GridColumn Visible="false" Field="@nameof(RequestViewModelDTO.Latitude)" HeaderText="Latitude" TextAlign="TextAlign.Center"
                        Width="140" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
            </GridColumn>
            <GridColumn Visible="false" Field="@nameof(RequestViewModelDTO.Longitude)" HeaderText="Longitude" TextAlign="TextAlign.Center"
                        Width="140" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
            </GridColumn>
            <GridColumn Visible="false" Field="@nameof(RequestViewModelDTO.AntennaMake)" HeaderText="Antenna Make"
                        Width="160" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
            </GridColumn>
            <GridColumn Visible="false" Field="@nameof(RequestViewModelDTO.AntennaType)" HeaderText="Antenna Type"
                        Width="160" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
            </GridColumn>
            <GridColumn Visible="false" Field="@nameof(RequestViewModelDTO.AntennaHeight)" HeaderText="Antenna Height" TextAlign="TextAlign.Left"
                        Width="170" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
            </GridColumn>
            <GridColumn Visible="false" Field="@nameof(RequestViewModelDTO.MTilt)" HeaderText="M Tilt" TextAlign="TextAlign.Left"
                        Width="120" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
            </GridColumn>
            <GridColumn Visible="false" Field="@nameof(RequestViewModelDTO.ETilt)" HeaderText="E Tilt" TextAlign="TextAlign.Left"
                        Width="120" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
            </GridColumn>
            <GridColumn Visible="false" Field="@nameof(RequestViewModelDTO.Baseband)" HeaderText="Baseband"
                        Width="140" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
            </GridColumn>
            <GridColumn Visible="false" Field="@nameof(RequestViewModelDTO.RRUType)" HeaderText="RRU Type"
                        Width="140" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
            </GridColumn>
            <GridColumn Visible="false" Field="@nameof(RequestViewModelDTO.Power)" HeaderText="Power - (w)" TextAlign="TextAlign.Left"
                        Width="160" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
            </GridColumn>
            <GridColumn Field="@nameof(RequestViewModelDTO.ProjectName)" HeaderText="Project Name"
                        Width="160" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
            </GridColumn>
            <GridColumn Field="@nameof(RequestViewModelDTO.ProjectType)" HeaderText="Project Type"
                        Width="160" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
            </GridColumn>
            <GridColumn Field="@nameof(RequestViewModelDTO.ProjectYear)" HeaderText="Project Year" TextAlign="TextAlign.Center"
                        Width="160" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
            </GridColumn>
            <GridColumn Visible="false" Field="@nameof(RequestViewModelDTO.SummerConfig)" HeaderText="Summer Config"
                        Width="170" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
            </GridColumn>
            <GridColumn Visible="false" Field="@nameof(RequestViewModelDTO.SoftwareVersion)" HeaderText="Software Version" TextAlign="TextAlign.Left"
                        Width="180" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
            </GridColumn>
            <GridColumn Visible="false" Field="@nameof(RequestViewModelDTO.RRUPower)" HeaderText="RRU Power - (w)" TextAlign="TextAlign.Center"
                        Width="170" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
            </GridColumn>
            <GridColumn Visible="false" Field="@nameof(RequestViewModelDTO.CSFBStatusGSM)" HeaderText="CSFB Status GSM" TextAlign="TextAlign.Center"
                        Width="190" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
            </GridColumn>
            <GridColumn Visible="false" Field="@nameof(RequestViewModelDTO.CSFBStatusWCDMA)" HeaderText="CSFB Status WCDMA" TextAlign="TextAlign.Center"
                        Width="190" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
            </GridColumn>
            <GridColumn Visible="false" Field="@nameof(RequestViewModelDTO.RETConfigured)" HeaderText="RET Configured" TextAlign="TextAlign.Center"
                        Width="170" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
            </GridColumn>
            <GridColumn Visible="false" Field="@nameof(RequestViewModelDTO.CarrierAggregation)" HeaderText="Carrier Aggregation" TextAlign="TextAlign.Center"
                        Width="190" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
            </GridColumn>
            <GridColumn Visible="false" Field="@nameof(RequestViewModelDTO.EngineerAssigned)" HeaderText="Engineer" TextAlign="TextAlign.Left"
                        Width="120" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
            </GridColumn>
            @*<GridColumn Field="@nameof(RequestViewModelDTO.MTilt)" HeaderText="M Tilt" TextAlign="TextAlign.Left">
                </GridColumn>*@
            <GridColumn Field="@nameof(RequestViewModelDTO.Status)" HeaderText="Status" TextAlign="TextAlign.Left"
                        Width="120" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
            </GridColumn>
            <GridColumn Visible="false" Field="@nameof(RequestViewModelDTO.IntegratedDate)" HeaderText="Date Integrated" TextAlign="TextAlign.Center"
                        Format="dd-MMM-yyyy" Type="ColumnType.Date" EditType="EditType.DatePickerEdit" AllowEditing="false" AllowFiltering="false"
                        Width="180" FilterSettings="@(new FilterSettings{ Type = Syncfusion.Blazor.Grids.FilterType.Menu })">
            </GridColumn>

            <GridColumn Visible="false" Field="@nameof(RequestViewModelDTO.DateSubmitted)" HeaderText="Date Submitted" TextAlign="TextAlign.Center"
                        Format="dd-MMM-yyyy" Type="ColumnType.Date" EditType="EditType.DatePickerEdit" AllowEditing="false" AllowFiltering="false"
                        Width="180" FilterSettings="@(new FilterSettings{ Type = Syncfusion.Blazor.Grids.FilterType.Menu })">
            </GridColumn>


               <GridColumn  Field="@nameof(RequestViewModelDTO.EngineerAssignedDateApproved)" HeaderText="Date Actioned" TextAlign="TextAlign.Center" AllowFiltering="false"
                        Format="dd-MMM-yyyy" Type="ColumnType.Date" EditType="EditType.DatePickerEdit" AllowEditing="false"
                        Width="160" FilterSettings="@(new FilterSettings{ Type = Syncfusion.Blazor.Grids.FilterType.Menu })">
                <Template>
                    @{
                        var request = (context as RequestViewModelDTO);
                        DateTime data;

                        //if (request.Status != "Accepted" && request.Status != "Rejected")
                        //{
                        //    data = request.DateUserActioned != null ? @request.DateUserActioned.GetValueOrDefault()!.Date : @request.DateSubmitted;
                        //}
                        //else
                        //{
                        //    data = request.EngineerAssignedIsApproved ? @request.EngineerAssignedDateApproved.Date : @request.EngineerAssignedDateActioned.Date;   
                        //}
                                           
                        data = @request.EngineerAssignedDateApproved.Date;
                    }                  

                   @* <span>@data!.ToString("dd-MMM-yyyy")</span>*@
                     <span>@data!.ToString("dd-MMM-yyyy").Replace("01-Jan-0001","")</span>

                </Template>
            </GridColumn>


            <GridColumn Visible="false" Field="@nameof(RequestViewModelDTO.RequesterName)" HeaderText="Requester" TextAlign="TextAlign.Left"
                        Width="190" FilterSettings="@(new FilterSettings{ Type = Syncfusion.Blazor.Grids.FilterType.Menu })">
            </GridColumn>
            <GridColumn Visible="false" Field="@nameof(RequestViewModelDTO.RequesterComment)" HeaderText="Requester Comment" TextAlign="TextAlign.Left"
                        Width="190" FilterSettings="@(new FilterSettings{ Type = Syncfusion.Blazor.Grids.FilterType.Menu })">
            </GridColumn>
            <GridColumn Visible="false" Field="@nameof(RequestViewModelDTO.EngineerComment)" HeaderText="Engineer Comment" TextAlign="TextAlign.Left"
                        Width="190" FilterSettings="@(new FilterSettings{ Type = Syncfusion.Blazor.Grids.FilterType.Menu })">
            </GridColumn>
            <GridColumn Visible="false" HeaderText="Bulk" Width="100" AllowFiltering="false">
                <Template>
                    @{
                        var request = (context as RequestViewModelDTO);

                        if (request.BulkuploadPath != null)
                        {
                            <a title="Uploaded Bulk" target="_blank" href="Documents/Bulk/@request.BulkuploadPath" class="btn btn-warning"><i class="fas fa-file-download"></i></a>
                        }
                    }
                </Template>
            </GridColumn>
            <GridColumn Visible="false" HeaderText="SSV" Width="80" AllowFiltering="false">
                <Template>
                    @{
                        var request = (context as RequestViewModelDTO);

                        if (request.SSVReport != null)
                        {
                            var ext = Path.GetExtension(request.SSVReport);
                            var title = ext switch
                            {
                                ".xls" or ".xlsx" or ".ppt" or ".pptx" => "SSV Report",
                                ".eml" or ".msg" => "Waiver Email",
                                _ => ""
                            };

                            var ppts = new List
                            <string>
                    { ".ppt", ".pptx" };

                            var ssvExt = Path.GetExtension(request.SSVReport);
                            var icon = (ppts.Contains(ssvExt)) ? "fa-file-powerpoint" : "fa-file-excel";

                            <a target="_blank" href="Documents/@((request.SSVReportIsWaiver) ? " Waiver" : "SSV" ) /@request.SSVReport" class="btn btn-warning">
                                <i class="fas fa-fw @((request.SSVReportIsWaiver) ? " fa-envelope": icon)"></i>
                            </a>
                        }
                    }
                </Template>
            </GridColumn>
            <GridColumn HeaderText="" Width="80" AllowFiltering="false">
                <Template>
                    @{
                        var request = (context as RequestViewModelDTO);

                        <a title="View Details" href="acceptance/report/@request.Id" class="btn btn-warning"><i class="fas fa-eye fa-fw"></i></a>
                    }
                </Template>
            </GridColumn>
        </GridColumns>
    </SfGrid>
</div>
<div class="my-4"></div>
@*}*@