@page "/acceptance/reports/general"
@layout MainLayoutAcceptance

<PageTitlePat Title="SMP (Acceptance) - Report" />

<div class="col-sm-12 m-0 p-0" style="background: url('images/worklist.jpg'); background-size: cover; background-position: center right;">
    <div class="display-4" style="padding: 4rem 2rem;">
        Site Acceptance Report
    </div>
</div>

<BreadcrumbAccess OnAuthenticationCheck="AuthenticationCheck" Paths="@Paths" />

<style type="text/css">
    .miniTable {
        min-height: 150px;
        margin-bottom: 20px;
    }

    #UserTable, #UserTable_header_table {
        /*table-layout: unset !important;*/
    }

    .e-dlg-overlay {
        opacity: .8 !important;
    }
</style>

@if (Requests == null)
{
    <PageLoading />
}
else
{
    /*height:calc(100vh - 7rem);*/
    <div style="width:calc(100vw - 20rem); ">
        <SfGrid ID="ReportTable" DataSource="@Requests" AllowPaging="true" AllowSorting="true" AllowTextWrap="true"
            AllowFiltering="true" Toolbar="@ToolbarItems" @ref="Grid_Request" ShowColumnChooser="true" AllowExcelExport="true"
            Width="100%">
            <GridEvents OnToolbarClick="ToolbarClickHandler" TValue="RequestViewModel"></GridEvents>
            <GridFilterSettings Mode="FilterBarMode.Immediate" ImmediateModeDelay="300" Type="Syncfusion.Blazor.Grids.FilterType.Excel"></GridFilterSettings>
            <GridPageSettings PageSize="10"></GridPageSettings>
            <GridSearchSettings></GridSearchSettings>
            <GridTextWrapSettings WrapMode="WrapMode.Content"></GridTextWrapSettings>
            <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false" Mode="EditMode.Dialog" ShowDeleteConfirmDialog="true"></GridEditSettings>
            <GridColumns>
                <GridForeignColumn Field="@nameof(RequestViewModel.TechTypeId)" HeaderText="Tech" ForeignKeyField="Id" ForeignKeyValue="Name" ForeignDataSource="@TechTypes" EditType="EditType.DropDownEdit"
                               Width="80" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
                </GridForeignColumn>
                <GridColumn Visible="false" Field="@nameof(RequestViewModel.UniqueId)" HeaderText="Unique Id" TextAlign="TextAlign.Left"
                        Width="170" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
                </GridColumn>
                <GridColumn Visible="false" Field="@nameof(RequestViewModel.BulkBatchNumber)" HeaderText="Batch Number" TextAlign="TextAlign.Left"
                        Width="170" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
                </GridColumn>
                <GridColumn Visible="false" Field="@nameof(RequestViewModel.Vendor)" HeaderText="Vendor" TextAlign="TextAlign.Left" AllowSearching="true"
                        Width="150" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
                </GridColumn>
                <GridColumn Field="@nameof(RequestViewModel.SiteId)" HeaderText="Site Id" TextAlign="TextAlign.Left"
                        Width="120" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
                </GridColumn>
                <GridColumn Visible="false" Field="@nameof(RequestViewModel.SiteName)" HeaderText="Site Name" TextAlign="TextAlign.Left"
                        Width="160" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
                </GridColumn>
                <GridColumn Visible="false" Field="@nameof(RequestViewModel.RNCBSC)" HeaderText="RNC/BSC" TextAlign="TextAlign.Left"
                        Width="140" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
                </GridColumn>
                <GridForeignColumn Field="@nameof(RequestViewModel.RegionId)" HeaderText="Region" ForeignKeyField="Id" ForeignKeyValue="Name" ForeignDataSource="@Regions" EditType="EditType.DropDownEdit"
                               Width="120" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
                </GridForeignColumn>
                <GridForeignColumn Field="@nameof(RequestViewModel.SpectrumId)" HeaderText="Spectrum" ForeignKeyField="Id" ForeignKeyValue="Name" ForeignDataSource="@Spectrums" EditType="EditType.DropDownEdit"
                               Width="140" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
                </GridForeignColumn>
                <GridColumn Visible="false" Field="@nameof(RequestViewModel.Bandwidth)" HeaderText="Bandwidth" TextAlign="TextAlign.Left"
                        Width="140" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
                </GridColumn>
                <GridColumn Visible="false" Field="@nameof(RequestViewModel.Latitude)" HeaderText="Latitude" TextAlign="TextAlign.Center"
                        Width="140" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
                </GridColumn>
                <GridColumn Visible="false" Field="@nameof(RequestViewModel.Longitude)" HeaderText="Longitude" TextAlign="TextAlign.Center"
                        Width="140" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
                </GridColumn>
                <GridForeignColumn Visible="false" Field="@nameof(RequestViewModel.AntennaMakeId)" HeaderText="Antenna Make" ForeignKeyField="Id" ForeignKeyValue="Name" ForeignDataSource="@AntennaMakes" EditType="EditType.DropDownEdit"
                               Width="160" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
                </GridForeignColumn>
                <GridForeignColumn Visible="false" Field="@nameof(RequestViewModel.AntennaTypeId)" HeaderText="Antenna Type" ForeignKeyField="Id" ForeignKeyValue="Name" ForeignDataSource="@AntennaTypes" EditType="EditType.DropDownEdit"
                               Width="160" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
                </GridForeignColumn>
                <GridColumn Visible="false" Field="@nameof(RequestViewModel.AntennaHeight)" HeaderText="Antenna Height" TextAlign="TextAlign.Left"
                        Width="170" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
                </GridColumn>
                <GridColumn Visible="false" Field="@nameof(RequestViewModel.MTilt)" HeaderText="M Tilt" TextAlign="TextAlign.Left"
                        Width="120" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
                </GridColumn>
                <GridColumn Visible="false" Field="@nameof(RequestViewModel.ETilt)" HeaderText="E Tilt" TextAlign="TextAlign.Left"
                        Width="120" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
                </GridColumn>
                <GridColumn Visible="false" Field="@nameof(RequestViewModel.Baseband)" HeaderText="Baseband"
                        Width="140" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
                </GridColumn>
                <GridColumn Visible="false" Field="@nameof(RequestViewModel.RRUType)" HeaderText="RRU Type"
                        Width="140" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
                </GridColumn>
                <GridColumn Visible="false" Field="@nameof(RequestViewModel.Power)" HeaderText="Power - (w)" TextAlign="TextAlign.Left"
                        Width="160" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
                </GridColumn>
                <GridForeignColumn Field="@nameof(RequestViewModel.ProjectNameId)" HeaderText="Project Name" ForeignKeyField="Id" ForeignKeyValue="Name" ForeignDataSource="@Projects" EditType="EditType.DropDownEdit"
                               Width="160" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
                </GridForeignColumn>
                <GridForeignColumn Field="@nameof(RequestViewModel.ProjectTypeId)" HeaderText="Project Type" ForeignKeyField="Id" ForeignKeyValue="Name" ForeignDataSource="@ProjectTypes" EditType="EditType.DropDownEdit"
                               Width="160" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
                </GridForeignColumn>
                <GridColumn Field="@nameof(RequestViewModel.ProjectYear)" HeaderText="Project Year" TextAlign="TextAlign.Center"
                        Width="160" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
                </GridColumn>
                <GridForeignColumn Visible="false" Field="@nameof(RequestViewModel.SummerConfigId)" HeaderText="Summer Config" ForeignKeyField="Id" ForeignKeyValue="Name" ForeignDataSource="@SummerConfigs" EditType="EditType.DropDownEdit"
                               Width="170" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
                </GridForeignColumn>
                <GridColumn Visible="false" Field="@nameof(RequestViewModel.SoftwareVersion)" HeaderText="Software Version" TextAlign="TextAlign.Left"
                        Width="180" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
                </GridColumn>
                <GridColumn Visible="false" Field="@nameof(RequestViewModel.RRUPower)" HeaderText="RRU Power - (w)" TextAlign="TextAlign.Center"
                        Width="170" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
                </GridColumn>
                <GridColumn Visible="false" Field="@nameof(RequestViewModel.CSFBStatusGSM)" HeaderText="CSFB Status GSM" TextAlign="TextAlign.Center"
                        Width="190" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
                </GridColumn>
                <GridColumn Visible="false" Field="@nameof(RequestViewModel.CSFBStatusWCDMA)" HeaderText="CSFB Status WCDMA" TextAlign="TextAlign.Center"
                        Width="190" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
                </GridColumn>
                <GridColumn Visible="false" Field="@nameof(RequestViewModel.RETConfigured)" HeaderText="RET Configured" TextAlign="TextAlign.Center"
                        Width="170" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
                </GridColumn>
                <GridColumn Visible="false" Field="@nameof(RequestViewModel.CarrierAggregation)" HeaderText="Carrier Aggregation" TextAlign="TextAlign.Center"
                        Width="190" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
                </GridColumn>
                <GridColumn Visible="false" Field="@nameof(RequestViewModel.Engineer)" HeaderText="Engineer" TextAlign="TextAlign.Left"
                        Width="120" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
                </GridColumn>
                @*<GridColumn Field="@nameof(RequestViewModel.MTilt)" HeaderText="M Tilt" TextAlign="TextAlign.Left">
                    </GridColumn>*@
                <GridColumn Field="@nameof(RequestViewModel.Status)" HeaderText="Status" TextAlign="TextAlign.Left"
                        Width="120" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
                </GridColumn>
                <GridColumn Visible="false" Field="@nameof(RequestViewModel.IntegratedDate)" HeaderText="Date Integrated" TextAlign="TextAlign.Center"
                        Format="dd-MMM-yyyy" Type="ColumnType.Date" EditType="EditType.DatePickerEdit" AllowEditing="false"
                        Width="180" FilterSettings="@(new FilterSettings{ Type = Syncfusion.Blazor.Grids.FilterType.Excel })">
                </GridColumn>
                <GridColumn Visible="false" Field="@nameof(RequestViewModel.DateSubmitted)" HeaderText="Date Submitted" TextAlign="TextAlign.Center"
                        Format="dd-MMM-yyyy" Type="ColumnType.Date" EditType="EditType.DatePickerEdit" AllowEditing="false"
                        Width="180" FilterSettings="@(new FilterSettings{ Type = Syncfusion.Blazor.Grids.FilterType.Excel })">
                </GridColumn>
                <GridColumn Field="@nameof(RequestViewModel.DateActioned)" HeaderText="Date Actioned" TextAlign="TextAlign.Center"
                        Format="dd-MMM-yyyy" Type="ColumnType.Date" EditType="EditType.DatePickerEdit" AllowEditing="false"
                        Width="160" FilterSettings="@(new FilterSettings{ Type = Syncfusion.Blazor.Grids.FilterType.Excel })">
                </GridColumn>
                <GridColumn Visible="false" Field="@nameof(RequestViewModel.RequesterName)" HeaderText="Requester" TextAlign="TextAlign.Left"
                        Width="190" FilterSettings="@(new FilterSettings{ Type = Syncfusion.Blazor.Grids.FilterType.Excel })">
                </GridColumn>
                <GridColumn Visible="false" Field="@nameof(RequestViewModel.RequesterComment)" HeaderText="Requester Comment" TextAlign="TextAlign.Left"
                        Width="190" FilterSettings="@(new FilterSettings{ Type = Syncfusion.Blazor.Grids.FilterType.Excel })">
                </GridColumn>
                <GridColumn Visible="false" Field="@nameof(RequestViewModel.EngineerComment)" HeaderText="Engineer Comment" TextAlign="TextAlign.Left"
                        Width="190" FilterSettings="@(new FilterSettings{ Type = Syncfusion.Blazor.Grids.FilterType.Excel })">
                </GridColumn>
                <GridColumn Visible="false" HeaderText="Bulk" Width="100" AllowFiltering="false">
                    <Template>
                        @{
                        var request = (context as RequestViewModel);

                        if (request.BulkuploadPath != null)
                        {
                            <a title="Uploaded Bulk" target="_blank" href="Documents/Bulk/@request.BulkuploadPath" class="btn btn-warning"><i class="fas fa-file-download"></i></a>
                        }
                    }
                </Template>
            </GridColumn>
            <GridColumn Visible="false" HeaderText="SSV" Width="80" AllowFiltering="false">
                <Template>
                    @{
                        var request = (context as RequestViewModel);

                        if (request.SSVReport != null)
                        {
                            var ext = Path.GetExtension(request.SSVReport);
                            var title = ext switch
                            {
                                ".xls" or ".xlsx" or ".ppt" or ".pptx" => "SSV Report",
                                ".eml" or ".msg" => "Waiver Email",
                                _ => ""
                            };

                            var ppts = new List<string> { ".ppt", ".pptx" };

                            var ssvExt = Path.GetExtension(request.SSVReport);
                            var icon = (ppts.Contains(ssvExt)) ? "fa-file-powerpoint" : "fa-file-excel";

                            <a target="_blank" href="Documents/@((request.SSVReportIsWaiver) ? "Waiver" : "SSV")/@request.SSVReport" class="btn btn-warning">
                                <i class="fas fa-fw @((request.SSVReportIsWaiver) ? "fa-envelope": icon)"></i>
                            </a>
                        }
                    }
                </Template>
            </GridColumn>
            <GridColumn HeaderText="" Width="80" AllowFiltering="false">
                <Template>
                    @{
                        var request = (context as RequestViewModel);

                        <a title="View Details" href="acceptance/report/@request.Id" class="btn btn-warning"><i class="fas fa-eye fa-fw"></i></a>
                    }
                </Template>
            </GridColumn>
        </GridColumns>
    </SfGrid>
</div>
    <div class="my-4"></div>
}