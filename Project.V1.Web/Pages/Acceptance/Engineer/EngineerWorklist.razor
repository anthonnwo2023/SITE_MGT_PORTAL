@page "/acceptance/engineer/worklist"
@layout MainLayoutAcceptance

<PageTitlePat Title="SMP (Acceptance) - My Worklist" />

<div class="col-sm-12 m-0 p-0" style="background: url('images/worklist.jpg'); background-size: cover; background-position: center right;">
    <div class="display-4" style="padding: 4rem 2rem;">
        Engineer Worklist
    </div>
</div>

<BreadcrumbAccess OnAuthenticationCheck="AuthenticationCheck" Paths="@Paths" />

<style type="text/css">
    .miniTable {
        min-height: 150px;
        margin-bottom: 20px;
    }

    #UserTable, #UserTable_header_table {
        /*table-layout: unset !important;*/
    }

    .e-dlg-overlay {
        opacity: .8 !important;
    }
</style>

@if (RequestEngWorklists == null)
{
    <PageLoading />
}
else
{
    <SfGrid ID="RejectedRequestTable" DataSource="@RequestEngWorklists" AllowPaging="true" AllowSorting="true" AllowTextWrap="true"
        Toolbar="@ToolbarItems" @ref="Grid_Request" ShowColumnChooser="true">
        <GridPageSettings PageSize="8"></GridPageSettings>
        <GridTextWrapSettings WrapMode="WrapMode.Content"></GridTextWrapSettings>
        <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false" Mode="EditMode.Dialog" ShowDeleteConfirmDialog="true"></GridEditSettings>
        <GridColumns>
            <GridColumn Field="@nameof(RequestViewModel.Id)" Visible="false" ShowInColumnChooser="false" IsPrimaryKey="true">
            </GridColumn>
            <GridColumn Field="@nameof(RequestViewModel.UniqueId)" HeaderText="Unique Id" TextAlign="TextAlign.Left" ValidationRules="@(new ValidationRules { Required = true })">
            </GridColumn>
            <GridColumn Field="@nameof(RequestViewModel.BulkBatchNumber)" HeaderText="Batch Number" TextAlign="TextAlign.Left" ValidationRules="@(new ValidationRules { Required = true })">
            </GridColumn>
            <GridColumn Field="@nameof(RequestViewModel.SiteId)" HeaderText="Site Id" TextAlign="TextAlign.Left" ValidationRules="@(new ValidationRules { Required = true })">
            </GridColumn>
            <GridColumn Field="@nameof(RequestViewModel.Vendor)" HeaderText="Vendor" EditType="EditType.DropDownEdit"
                           FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
            </GridColumn>
            <GridForeignColumn Field="@nameof(RequestViewModel.SpectrumId)" HeaderText="Spectrum" ForeignKeyField="Id" ForeignKeyValue="Name" ForeignDataSource="@Spectrums" EditType="EditType.DropDownEdit"
                           FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
            </GridForeignColumn>
            <GridForeignColumn Field="@nameof(RequestViewModel.ProjectNameId)" HeaderText="Project Name" ForeignKeyField="Id" ForeignKeyValue="Name" ForeignDataSource="@Projects" EditType="EditType.DropDownEdit"
                           FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
            </GridForeignColumn>
            <GridForeignColumn Field="@nameof(RequestViewModel.ProjectTypeId)" HeaderText="Project Type" ForeignKeyField="Id" ForeignKeyValue="Name" ForeignDataSource="@ProjectTypes" EditType="EditType.DropDownEdit"
                           FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })">
            </GridForeignColumn>
            @*<GridColumn Field="@nameof(RequestViewModel.MTilt)" HeaderText="M Tilt" TextAlign="TextAlign.Left" ValidationRules="@(new ValidationRules { Required = true })">
                </GridColumn>*@
            <GridForeignColumn Field="@nameof(RequestViewModel.TechTypeId)" HeaderText="Tech" ForeignKeyField="Id" ForeignKeyValue="Name" ForeignDataSource="@TechTypes" EditType="EditType.DropDownEdit">
            </GridForeignColumn>
            <GridForeignColumn Field="@nameof(RequestViewModel.RegionId)" Visible="false" HeaderText="Region" ForeignKeyField="Id" ForeignKeyValue="Name" ForeignDataSource="@Regions" EditType="EditType.DropDownEdit">
            </GridForeignColumn>
            <GridColumn Field="@nameof(RequestViewModel.Status)" HeaderText="Status" TextAlign="TextAlign.Left" ValidationRules="@(new ValidationRules { Required = true })">
            </GridColumn>
            <GridColumn Field="@nameof(RequestViewModel.DateCreated)" HeaderText="Created" TextAlign="TextAlign.Left" ValidationRules="@(new ValidationRules { Required = true })"
                    Format="d" Type="ColumnType.Date" EditType="EditType.DatePickerEdit" AllowEditing="false">
            </GridColumn>
            <GridColumn HeaderText="Bulk" Width="100">
                <Template>
                    @{
                    var request = (context as RequestViewModel);

                    if (request.BulkuploadPath != null)
                    {
                        <a title="Uploaded Bulk" target="_blank" href="Documents/Bulk/@request.BulkuploadPath" class="btn btn-warning"><i class="fas fa-file-download"></i></a>
                    }
                }
            </Template>
        </GridColumn>
        <GridColumn HeaderText="SSV" Width="80">
            <Template>
                @{
                    var request = (context as RequestViewModel);

                    if (request.SSVReport != null)
                    {
                        var ext = Path.GetExtension(request.SSVReport);
                        var title = ext switch
                        {
                            ".xls" or ".xlsx" or ".ppt" or ".pptx" => "SSV Report",
                            ".eml" or ".msg" => "Waiver Email",
                            _ => ""
                        };

                        var ppts = new List<string> { ".ppt", ".pptx" };

                        var ssvExt = Path.GetExtension(request.SSVReport);
                        var icon = (ppts.Contains(ssvExt)) ? "fa-file-powerpoint" : "fa-file-excel";

                        <a title="@title" target="_blank" href="Documents/@((request.SSVReportIsWaiver) ? "Waiver": "SSV")/@request.SSVReport" class="btn btn-warning">
                            <i class="fas fa-fw @((request.SSVReportIsWaiver) ? "fa-envelope": icon)"></i>
                        </a>
                    }
                }
            </Template>
        </GridColumn>
        <GridColumn HeaderText="" Width="80">
            <Template>
                @{
                    var request = (context as RequestViewModel);

                    <a title="Action Requesst" href="acceptance/engineer/worklist/@request.Id" class="btn btn-warning"><i class="fas fa-bars"></i></a>
                }
            </Template>
        </GridColumn>
    </GridColumns>
</SfGrid>
}