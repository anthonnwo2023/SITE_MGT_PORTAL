@page "/hud/setup"
@layout MainLayoutHalt

<PageTitlePat Title="SMP (HUD) - Request Setup" />

<style type="text/css">
    .miniTable {
        min-height: 150px;
        margin-bottom: 20px;
    }

    .e-dlg-overlay {
        opacity: .8 !important;
    }

    #UserTable, #UserTable_header_table {
        /*table-layout: unset !important;*/
    }
</style>

<div class="col-sm-12 m-0 p-0" style="background: url('images/worklist-black.jpg'); background-size: cover; background-position: center right;">
    <div class="display-4 text-white" style="padding: 4rem 2rem;">
        Setup
    </div>
</div>


<div>
    <BreadcrumbHalt OnAuthenticationCheck="AuthenticationCheck" Paths="@Paths" />

    <div class="col-md-12">
        <SfToast CssClass="@ToastCss" ID="toast_default" @ref="ToastObj" Timeout=0 Icon="e-circle_info"
             ShowCloseButton="true" NewestOnTop="true">
            <ToastPosition X="@ToastPosition"></ToastPosition>
            <ToastEvents OnClick="@OnToastClickHandler"></ToastEvents>
        </SfToast>
    </div>

    <div class="row">
        <!-- Column -->
        <div class="col-lg-12">
            <div class="card">
                <div class="card-body px-2">
                    <!-- Row -->
                    <div class="row" style="margin-right: 0px; margin-left:0px;">
                        <div class="col-lg-12 miniTable">
                            <p class="d-flex">
                                <span class="border float-right px-3 font-weight-bold">Stake Holders</span>
                            </p>
                            @if (Stakeholders != null)
                            {
                                <SfGrid DataSource="@Stakeholders" AllowPaging="true" AllowSorting="true" AllowTextWrap="true" Toolbar="@ToolbarItems" @ref="Grid_Stakeholder">
                                    <GridPageSettings PageSize="5"></GridPageSettings>
                                    <GridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true" Mode="EditMode.Dialog" Dialog="DialogEditParams" ShowDeleteConfirmDialog="true"></GridEditSettings>
                                    <GridEvents OnActionBegin='e => ActionBegin(e, "SiteHUDStakeholder")' OnActionComplete='e => ActionComplete(e, "SiteHUDStakeholder")' TValue="SiteHUDStakeholder"></GridEvents>
                                    <GridColumns>
                                        <GridColumn Field="@nameof(SiteHUDStakeholder.Id)" Visible="false" IsPrimaryKey="true">
                                        </GridColumn>
                                        <GridColumn Field="@nameof(SiteHUDStakeholder.Name)" HeaderText="Stake Holders" TextAlign="TextAlign.Left" ValidationRules="@(new ValidationRules { Required = true })">
                                        </GridColumn>
                                        <GridColumn Field="@nameof(SiteHUDStakeholder.IsActive)" HeaderText="Is Active" DisplayAsCheckBox="true" TextAlign="TextAlign.Left" ValidationRules="@(new ValidationRules { Required = true })">
                                        </GridColumn>
                                        <GridColumn Field="@nameof(SiteHUDStakeholder.DateCreated)" HeaderText="Created" TextAlign="TextAlign.Left" ValidationRules="@(new ValidationRules { Required = true })"
                                                    Format="d" Type="ColumnType.Date" EditType="EditType.DatePickerEdit" EditorSettings="@DateEditReadonlyParams" AllowEditing="false" DefaultValue="@(DateTime.Now.AddHours(1))">
                                        </GridColumn>
                                        <GridColumn HeaderText="Manage Records" Width="120">
                                            <GridCommandColumns>
                                                <GridCommandColumn Type="CommandButtonType.Edit" ButtonOption="@(new CommandButtonOptions() { IconCss = "e-icons e-edit", CssClass = "e-flat" })"></GridCommandColumn>
                                                <GridCommandColumn Type="CommandButtonType.Delete" ButtonOption="@(new CommandButtonOptions() { IconCss = "e-icons e-delete", CssClass = "e-flat" })"></GridCommandColumn>
                                                <GridCommandColumn Type="CommandButtonType.Save" ButtonOption="@(new CommandButtonOptions() { IconCss = "e-icons e-update", CssClass = "e-flat" })"></GridCommandColumn>
                                                <GridCommandColumn Type="CommandButtonType.Cancel" ButtonOption="@(new CommandButtonOptions() { IconCss = "e-icons e-cancel-icon", CssClass = "e-flat" })"></GridCommandColumn>
                                            </GridCommandColumns>
                                        </GridColumn>
                                    </GridColumns>
                                </SfGrid>
                            }
                            else
                            {
                                <PageLoading MarginTop="10" />
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>